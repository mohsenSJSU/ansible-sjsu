# DEPLOY
- name: Deploy webservers on port 8080
  hosts: web
  become: true
  tags: [deploy]
  vars:
    listen_port: 8080
    site_name: hello
    web_root: "/var/www/{{ site_name }}"
    nginx_conf: "/etc/nginx/sites-available/{{ site_name }}.conf"
    nginx_link: "/etc/nginx/sites-enabled/{{ site_name }}.conf"

  tasks:
    - name: Install nginx
      apt:
        name: nginx
        state: present
        update_cache: yes

    - name: Make web root
      file:
        path: "{{ web_root }}"
        state: directory

    - name: Put index.html (host-specific message)
      copy:
        dest: "{{ web_root }}/index.html"
        content: |
          <!doctype html>
          <html>
            <head><meta charset="utf-8"><title>SJSU Demo</title></head>
            <body style="font-family: system-ui; margin: 2rem;">
              <h1>Hello World from SJSU-{{ site_id }}</h1>
            </body>
          </html>

    - name: Write nginx site config (port 8080)
      copy:
        dest: "{{ nginx_conf }}"
        content: |
          server {
              listen {{ listen_port }};
              server_name _;
              root {{ web_root }};
              index index.html;
              location / { try_files $uri $uri/ =404; }
          }

    - name: Enable site (symlink)
      file:
        src: "{{ nginx_conf }}"
        dest: "{{ nginx_link }}"
        state: link
        force: true

    - name: (Optional) Open port 8080 on UFW if present
      command: ufw allow {{ listen_port }}
      register: ufw_out
      failed_when: false  # do nothing if ufw is inactive/not installed

    - name: Start/enable nginx (simple restart to apply changes)
      service:
        name: nginx
        state: restarted
        enabled: true


# UNDEPLO
- name: Un-deploy webservers
  hosts: web
  become: true
  tags: [undeploy]
  vars:
    site_name: hello
    web_root: "/var/www/{{ site_name }}"
    nginx_conf: "/etc/nginx/sites-available/{{ site_name }}.conf"
    nginx_link: "/etc/nginx/sites-enabled/{{ site_name }}.conf"

  tasks:
    - name: Disable site (remove symlink)
      file:
        path: "{{ nginx_link }}"
        state: absent

    - name: Remove site config
      file:
        path: "{{ nginx_conf }}"
        state: absent

    - name: Remove web files
      file:
        path: "{{ web_root }}"
        state: absent

    - name: Stop/disable nginx
      service:
        name: nginx
        state: stopped
        enabled: false
